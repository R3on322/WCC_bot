import asyncio
import logging

from aiogram import Dispatcher, Bot
from aiogram.filters import Command, CommandStart, Text, or_f
from config.config import Config, load_config
from filters.is_digit import IsDigit
from filters.message_type import IsPoll
from handlers.currency_handler import process_start_currency, process_second_currency, process_end_currency, \
    process_amount_of_currency, process_another_currency, process_any_message, process_not_num, process_cancel_command
from handlers.cute_handler import process_cute
from handlers.poll_handler import process_end_poll, process_save_poll, process_enter_poll, \
    process_get_list_poll, process_main_menu_poll, process_echo_poll, process_send_poll
from handlers.user_handler import process_start, process_echo
from handlers.weather_handler import process_start_weather, process_end_weather
from states.currency_states import CurrencyStates
from states.poll_states import PollStates
from states.weather_states import WeatherStates

logger = logging.getLogger(__name__)


async def main() -> None:
    """
    –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞.

    –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –≤—Å–µ—Ö API.
    """
    logging.basicConfig(level=logging.INFO,
                        format=u'%(filename)s:%(lineno)d #%(levelname)-8s'
                               u'[%(asctime)s] - %(name)s - %(message)s')

    logger.info('Starting bot')

    config: Config = load_config()
    bot: Bot = Bot(token=config.tg_bot.token, parse_mode='HTML')
    dp: Dispatcher = Dispatcher()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "/start".
    dp.message.register(process_start, CommandStart())

    # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–û–ø—Ä–æ—Å".
    dp.message.register(process_main_menu_poll, Text(text='–û–ø—Ä–æ—Å üìã'))
    # –í—ã—Ö–æ–¥ –∏–∑ –º–µ–Ω—é –û–ø—Ä–æ—Å.
    dp.message.register(process_end_poll, PollStates.menu, Text(text='–í—ã–π—Ç–∏'))
    # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–°–ø–∏—Å–æ–∫ –æ–ø—Ä–æ—Å–æ–≤" –≤ –º–µ–Ω—é "–û–ø—Ä–æ—Å".
    dp.message.register(process_get_list_poll, PollStates.menu, Text(text='–°–ø–∏—Å–æ–∫ –æ–ø—Ä–æ—Å–æ–≤'))
    # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–ø—Ä–æ—Å".
    dp.message.register(process_enter_poll, Text(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–ø—Ä–æ—Å'))
    # –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –æ–ø—Ä–æ—Å–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç.
    dp.callback_query.register(process_send_poll, PollStates.send_poll)
    # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–∞ "–û–ø—Ä–æ—Å". –ï—Å–ª–∏ —ç—Ç–æ –æ–ø—Ä–æ—Å, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ.
    dp.message.register(process_save_poll, PollStates.menu, IsPoll())
    # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –º–µ–Ω—é "–û–ø—Ä–æ—Å".
    dp.message.register(process_echo_poll, PollStates.menu)

    # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ß—Ç–æ-—Ç–æ –º–∏–ª–æ–µ" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.
    dp.message.register(process_cute, Text(text='–ß—Ç–æ-—Ç–æ –º–∏–ª–æ–µ ü•π'))

    # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.
    dp.message.register(process_start_currency, Text(text='–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç üí±'))
    # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/cancel" –≤ –º–µ–Ω—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç.
    dp.message.register(process_cancel_command, Command(commands='cancel'))
    # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –≤ Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∫–Ω–æ–ø–∫–∏ "–î—Ä—É–≥–∞—è –≤–∞–ª—é—Ç–∞".
    dp.callback_query.register(process_another_currency,
                               or_f(CurrencyStates.main_currency, CurrencyStates.secondary_currency),
                               Text(text='another_currency'))
    # –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–µ—Ä–≤–æ–π –≤–∞–ª—é—Ç—ã.
    dp.callback_query.register(process_second_currency, CurrencyStates.main_currency)
    # –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –≤—Ç–æ—Ä–æ–π –≤–∞–ª—é—Ç—ã.
    dp.callback_query.register(process_amount_of_currency, CurrencyStates.secondary_currency)
    # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –≤–≤–æ–¥ —á–∏—Å–ª–∞ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–æ —á–∏—Å–ª–æ–º.
    dp.message.register(process_end_currency, CurrencyStates.amount_of_currency, IsDigit())
    # –†–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–æ –≤—Ä–µ–º—è –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç.
    dp.message.register(process_any_message, or_f(CurrencyStates.main_currency, CurrencyStates.secondary_currency))
    # –†–µ–∞–∫—Ü–∏—è –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–µ —á–∏—Å–ª–æ, –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç.
    dp.message.register(process_not_num, CurrencyStates.amount_of_currency)

    # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ü–æ–≥–æ–¥–∞" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.
    dp.message.register(process_start_weather, Text(text='–ü–æ–≥–æ–¥–∞ üå§'))
    # –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞
    dp.message.register(process_end_weather, WeatherStates.geo_position)
    # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –º–µ–Ω—é "–ü–æ–≥–æ–¥–∞".
    dp.message.register(process_echo)

    try:
        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot)

    finally:
        await bot.close()

if __name__ == '__main__':
    asyncio.run(main())
